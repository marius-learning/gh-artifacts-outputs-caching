name: Deploy Application
on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: "${{ hashFiles('package-lock.json') }}"
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: "${{ hashFiles('package-lock.json') }}"
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - run: make test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    outputs:
      file_name: ${{ steps.file_name.outputs.file_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: cache
        with:
          path: node_modules
          key: "${{ hashFiles('package-lock.json') }}"
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make install
      - run: make build
      - name: Output JS filename
        id: file_name
        run: find dist/assets/*.js -type f -execdir echo 'file_name={}' >> $GITHUB_OUTPUT ';'
      - uses: actions/upload-artifact@v3
        with:
          path: dist
          name: build
          retention-days: 1

  deploy-dev:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: http://github-actions-course-website.s3-website-us-east-1.amazonaws.com/
    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: github-actions-course-website
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - run: echo "${{ needs.build.outputs.file_name }}"
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
      - run: make deploy
